■グラフィックス・パイプライン
それぞれが異なる処理を行う「ステージ」という単位に分かれており、
このステージを順番に実行される仕組みのことを「グラフィックス・パイプライン」という
グラフィックス・パイプラインは以下の順番に実行される

1.Vertex Puller(VP,バーテックス・プラー)
グラフィックス・パイプラインの最初のステージ。
VPはGPUメモリからひとつずつ頂点データを取り出し、
Vertex Shaderステージに渡される。

2.Vertex Shader(VS,バーテックス・シェーダー)
最初のプログラム可能なステージ。
VPで読み取られたすべての頂点データは、最初に
このステージで処理される。
VSでは、プリミティブの回転、拡大縮小、移動のほか、
座標系の変換、頂点単位のライティングなど、様々な操作を行うことが可能。

3.Tessellation Control Shader(TCS,テッセレーション・コントロール・シェーダー)
TCSは「テッセレーション」ステージの最初のステージ。
テッセレーション・ステージは３つのステージで構成され、共同で「テッセレーション」と呼ばれる処理を行う。
＊テッセレーションの説明は用語テキストに記述。
TCSは、新たに作成する小さなプリミティブの頂点データを、どこに、どのように作成する作業を担当する。
TCSはVSどうようにプログラム可能なステージ。
テッセレーション・ステージは省略可能だが、すべて省略するか、すべて使用するかのどちらかになる。

4.Tessellation Primitive Generation(TPG,テッセレーション・プリミティブ・ジェネレーション)
TPGはテッセレーション・ステージの２つ目のステージ
VPと同じく固定機能のステージ。
TPGはTCSからの情報を受け取り、実際に小さなプリミティブへと分割し、テッセレーションの
最後のステージになるTESへと送る

5.Tessellation Evaluation Shader(TES,テッセレーション・エヴォリューション・シェーダー)
最後のテッセレーション・ステージ。
TCS同様にプログラム可能なステージで、TPSから受け取ったプリミティブを変形し、
細かなデティールを加える役割を持つ。
TPSから送られてきた小さなプリミティブは、元のプリミティブを分割しただけの状態なので
このステージで頂点の座標や色を調整する。

6.Geometry Shader(GS,ジオメトリ・シェーダー)
ひとつのプリミティブの頂点データを受け取り、0個以上のプリミティブの頂点データを生成して
後段のステージへ送る。
このステージでは、頂点データを増やすだけでなく、削除も可能。
GSはプログラム可能なステージで、省略も可能。

7.Primitive Assembly(PA,プリミティブ・アセンブリー)
前段のステージで変換された１つ以上の頂点データを蓄積し、プリミティブを
構成できる数になった段階で、まとめて次のステージへ渡す。
GL_TRIANGLESの場合は３つとなる。
PAは固定機能のステージである。

8.Rasterization(RS,ラスタライゼーション)
RSはPAから送られたプリミティブをもとにフラグメントと呼ばれるピクセル片を生成し
後段のFragment Shaderへと送る。
RSは固定機能のステージ。
各フラグメントは2〜3つの頂点データを補間した値を持つ。
RSは、また、裏向きのプリミティブを除去(カウリング)したり
プリミティブの画面に表示されない部分を切り捨てる(クリッピング)
RSは「ビューポート」というパラメータを使って、
「クリッピング空間」から「スクリーン空間」への 変換を行う。

9.Fragment Shader(FS,フラグメント・シェーダ)
最後のプログラム可能なステージ。
RSによって送られてきたフラグメントから、実際の色を計算する。
FSもVSのように、ひとつのフラグメントを受け取り、ひとつの色を送り出す。
FSは主に、フラグメント単位のライティングを行うために使用される。

10.Per-Fragment Operations(PFO,パー・フラグメント・オペレーションズ)
グラフィックス・パイプラインの最後のステージ。
PFOは固定機能のステージで、FSから送られてきた色情報と深度情報を
レンダー・バッファやデプス・ステンシル・バッファと呼ばれるメモリ上の領域に
書き込んでくれる。
PFOはまた、FSからの色情報とレンダー・バッファの色を様々な方法で合成する機能も備えている。

以上のステージを順番に行うと、最終的に
レンダー・バッファ(Render Buffer。描画した画像を格納するメモリ上の領域)
にプリミティブが描画される。