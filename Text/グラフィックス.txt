■プリミティブ(Primitive)
3Dの頂点情報を定義して、それをGPUに転送して描画されたもの。
プリミティブには以下の種類がある
・GL_POINTS　→　点の集まり
・GL_LINES　→　直線の集まり
・GL_LINE_STRIP　→　連続した直線
・GL_LINE_LOOP　→　GL_LINE_STRIPの最初と最後の点の間にも引かれる
・GL_TRIANGLES　→　三角形の集まり
・GL_TRIANGLE_STRIP　→　連続した三角形
・GL_TRIANGLE_FAN　　→　連続した三角形

■頂点(Vertex)
プリミティブを構成する点のこと。
そして、頂点の座標や色などのパラメータの集合を
「頂点データ」という。

■Vertex Buffer Object(VBO)
頂点データを格納するオブジェクト
VBOはGPUメモリに作られるバッファ(データを格納するメモリ上の領域)の一種

■頂点アトリビュート
頂点データには座標や色の様々な情報を、最大16種類まで格納することが出来る。
どのような情報を格納するかはプログラマーが自由に決められるが、どのような情報が
どのような順番で格納されるかはOpenGLには分からない。
そのため、プログラマーが作成した頂点データの構造をOpenGLに教える必要がある。
この頂点データの構造を示すパラメータを「頂点アトリビュート」という。

■Vertex Array Object(VAO)
OpenGLのグラフィックス・パイプラインにおいて、最初に頂点を受け取るのはVPである。
VPには16個のデータ入力ポイント(バインディング・ポイント)があり、
どの頂点アトリビュートをどのバインディング・ポイントに結びつける(バインドする)かは自由に設定できる。
この設定を行うためのオブジェクトが「Vertex Array Object(VAO)」である。

■in/out修飾子
各シェーダー・ステージへの入出力用の変数定義。
in修飾子のついた変数にはシェーダーへの入力が格納される。
out修飾子のついた変数には、何らかの値を設定して、次のステージに処理を引き継ぐ。
頂点シェーダーでは、「vPosition」と「vColor」が入力変数で、「outColor」が出力変数である。
フラグメントシェーダーでは、「outColor」が入力変数で、「fragColor」が出力変数になる。

■layout修飾子
変数の入出力先や属性を指定する機能がある。
layout修飾子には以下の構文を持つ
[ layout(qualifierl = value , qualifierl...) ]

■インデックスバッファ
頂点データを直接プリミティブとして扱うのではく、インデックスによって
間接的に扱うことが可能になる(メモリの必要数と処理時間が減る)

■インデックスデータ
「対応する頂点データ配列の先頭から何番目の頂点データか」を示す数値の集まり

■uniform
アプリケーションから渡されるパラメータであることを示す修飾子

■透視投影
近くにあるほど大きく、遠くにあるほど小さくみえるような変換で
現実世界を見るのと同じように3D空間を見るための変換方法。

■深度バッファ
ピクセルごとの奥行き情報を格納しているメモリ領域
二枚の四角形の前後関係を正すために使っている。

